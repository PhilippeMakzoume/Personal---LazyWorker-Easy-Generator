<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAA9OT0AAAYAAC0qLVMqKCqRKysrjy4uLo8/Pj+PLi0ujzMwLo87NzWPMzAujzs3NY8rKyqPLi4ujzU0
        NY8qKSqPLisujz86P48yMC6PMC4rjzAwL48yMzKPPz8/jy0uLY8uLS6PPz4/jy4uLo8rKyuPKisqkS0t
        LVMAAAAAPT09AEU/QwA1MzVTODM46SAfIP8dHh3/Hh8e/yEgIf8eHh7/ISEe/yMiH/8iHx7/IiAf/x4f
        Hf8eHx7/Hx8f/x0dHf8eHR7/ISAh/yEgHf8hIR7/ISIh/yEiIf8hIiH/Hh8e/x4eHv8hICH/Hh8e/x0f
        Hf8gISD/ODc46TU1NVNFQ0QAODc4UzMyMukVFBT/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAgM/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8VFBT/MzMy6Tg5OFNDQUGRMC8w/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAkN/wASHP8AHi//ACI0/wAzTP8AbaT/ACU3/wAAAP8AAAD/AAAB/wAA
        Af8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8wMTD/Q0RDkUhGQ48zMjD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAgT/ACY4/wBciP8AfLb/AJTg/wCb6v8An+v/AKHx/wCp/v8AiMv/AEhs/wAV
        Iv8AAgX/AAIF/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/zMyM/9IR0iPSEZDjzMyMP8AAAD/AAAA/wAA
        AP8AAAD/AAAB/wAAAf8AAAD/ABwn/wBlkv8AnOP/ALX//wC7//8Az///ANT//wDU//8Auf//AK7//wCx
        //8Asfz/AI/L/wBKav8ADRX/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/MzIz/0hISI9IREOPMzEw/wAA
        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
        Gv8AAAD/AAAA/wAAAP8AAAD/AAAA/zMyM/9ISEiPSEZIjzMyM/8AAAD/AAAA/wAAAP8AAAD/AAEB/wAB
        Af8AAAD/ACws/wCXm/8A5Or/APb//wDy//8A7P//AO7//wDy//8A8v//APf//wD5//8A8vz/AMHI/wBh
        Yv8AExD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/MzIz/0hHSI9JR0mPMjEy/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAoK/wA9Pv8Ai4//AOXv/wD0/f8A6vH/AOfr/wDk6f8AydH/AKOo/wBk
        Z/8AHBz/AAEA/wACAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8yMjL/SkpKj11bXZA4Nzj/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAGBf8Ac3T/AH9//wBERP8ANDT/ACsr/wAW
        F/8ACAj/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/zk6Of9ZWlmQfoZ+cIaH
        hvU5OTj/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wABAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8+PTz/ioeK9Wll
        aXBKbUrlZXxk95SXlPVsbGv/ZGFg/2VhYf9lY2T/ZGNk/2FhYf9hYWH/ZGNk/2VjZf9lY2X/ZWNk/2Vl
        ZP9lZWX/ZWVl/2VlZf9lZGX/ZWNl/2VjZf9lY2X/ZWNl/2VkZf9lZWX/ZWVl/2VkZf9lY2X/cG9w/5yZ
        m/VvY2/3WEdY5UptSv9Ia0jll6CXcMbGxZDNxcSPzsbFj87KzY/Nys2PxcbFj8XGxY/Nys2PzsrOj87K
        zo/Oy86Pzs7Oj87Pzo/Oz86Pzs7Oj87Lzo/Oys6PzsrOj87Kzo/Oys6PzsvOj87Ozo/Ozs6PzsvOj87K
        zo/PzM+QoZqhcFZFVuVYR1j/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>